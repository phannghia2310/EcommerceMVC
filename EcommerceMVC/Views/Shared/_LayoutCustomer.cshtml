<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <title>@ViewBag.Title</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Raleway:wght@600;800&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="~/lib/lightbox/css/lightbox.min.css" rel="stylesheet">
    <link href="~/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">


    <!-- Customized Bootstrap Stylesheet -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="~/css/style.css" rel="stylesheet">
    @RenderSection("Sections", required: false)
</head>
<body>
    @await Html.PartialAsync("_Loading")

    @await Html.PartialAsync("_Header")

    <div style="margin-top: 50px;">
        @RenderBody()
    </div>

    @await Html.PartialAsync("_Footer")
    
    @* Chat *@
    <a href="#" class="btn btn-outline-primary border-3 border-primary rounded-circle position-fixed d-flex justify-content-center align-items-center mb-5" style="right:30px; bottom:30px; width:45px; height:45px;" id="openChatButton">
        <i class="fab fa-facebook-messenger"></i>
    </a>

    !-- Cửa sổ chat -->
    <div class="card position-fixed m-3" style="width: 300px; right:70px; bottom: 10px; display: none; z-index:99;" id="chatWindow">
        <div class="card-header bg-secondary text-white">
            <i class="fas fa-circle fa-xs mr-2" style="color: #23d741;"></i> Chat với chúng tôi
            <button type="button" class="btn-close float-end" id="closeChatButton"></button>
        </div>
        <div class="card-body" style="height: 300px; overflow-y: scroll;" id="chatMessages">
            <!-- Nội dung chat ở đây -->
        </div>
        <div class="card-footer">
            <div class="input-group">
                <input type="text" class="form-control" id="messageInput" placeholder="Nhập tin nhắn">
                <button class="btn btn-primary" id="sendButton">Gửi</button>
            </div>
        </div>
    </div>

    <!-- Back to Top -->
    <a href="#" class="btn btn-primary border-3 border-primary rounded-circle back-to-top"><i class="fa fa-arrow-up"></i></a>

    <!-- JavaScript Libraries -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/easing/easing.min.js"></script>
    <script src="~/lib/waypoints/waypoints.min.js"></script>
    <script src="~/lib/lightbox/js/lightbox.min.js"></script>
    <script src="~/lib/owlcarousel/owl.carousel.min.js"></script>

    <!-- Template Javascript -->
    <script src="~/js/main.js"></script>
    @RenderSection("Scripts", required: false)
    <script>
        $(document).ready(function () {
            $("#search-button").click(function () {
                let url = `/HangHoa/Search?query=` + $("#search-text").val();
                window.location.href = url;
            });
        });
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

            if (document.getElementById("messageInput").value === "") {
                document.getElementById('sendButton').disabled = true;
            }

            var userName;
            fetch('/Home/GetUser')
                .then(response => response.json())
                .then(data => { userName = data.name });

            var lastUser = null;
            connection.on("ReceiveMessage", function (user, message) {
                var msg = document.createElement("div");

                var messageSpan = document.createElement("span");
                messageSpan.textContent = message;
                messageSpan.classList.add("message", "p-2", "rounded", "mw-75");
                messageSpan.style.wordWrap = "break-word";

                if (user === userName) {
                    messageSpan.classList.add('text-white', 'bg-primary', 'mr-3');
                    msg.appendChild(messageSpan);
                    msg.classList.add('d-flex', 'justify-content-start', 'flex-row-reverse', 'mb-1');
                }
                else {
                    messageSpan.classList.add('text-dark', 'bg-light', 'ml-3');
                    msg.appendChild(messageSpan);
                    msg.classList.add('d-flex', 'justify-content-start', 'mb-1');
                }

                document.getElementById("chatMessages").appendChild(msg);

                document.getElementById("chatMessages").scrollTop = document.getElementById("chatMessages").scrollHeight;
                lastUser = user;
            });

            connection.start().then(function () {
                document.getElementById('sendButton').disabled = false;
            }).catch(function (err) {
                return console.error(err.toString());
            });

            document.getElementById("sendButton").addEventListener("click", function (event) {
                var user = userName; // Thay đổi này bằng tên người dùng thực tế
                var message = document.getElementById("messageInput").value;
                var now = new Date();
                now.setHours(now.getHours() + 7);

                connection.invoke("SendMessage", user, message).catch(function (err) {
                    return console.error(err.toString());
                });

                fetch('/Home/SaveMessage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        FromUser: user,
                        ToUser: 'Admin',
                        Message1: message,
                        Timestamp: now,
                        IsRead: 0
                    })
                }).catch(function (err) {
                    return console.log(err.toString());
                });

                document.getElementById("messageInput").value = "";
                event.preventDefault();
            });

            document.getElementById("openChatButton").addEventListener("click", function () {
                document.getElementById('chatWindow').style.display = 'block';
                this.style.display = 'none';
            });

            document.getElementById("closeChatButton").addEventListener("click", function () {
                document.getElementById('chatWindow').style.display = 'none';
                document.getElementById('openChatButton').style.display = 'block';
            });
        });
    </script>
</body>
</html>
